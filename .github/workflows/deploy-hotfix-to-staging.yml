name: Deploy Hotfix to Aptible Staging

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or tag to deploy (e.g. main, feature/my-branch, v1.2.3)"
        required: true
        default: main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the requested ref
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      # 2. Download and install Aptible CLI binary, then login
      - name: Install Aptible CLI and login
        run: |
          # Download latest Aptible CLI binary
          curl -Lo aptible https://github.com/aptible/aptible-cli/releases/latest/download/aptible-linux-amd64
          chmod +x aptible
          sudo mv aptible /usr/local/bin/

          # Verify installation
          aptible version

          # Login to Aptible
          aptible login \
            --email "${{ secrets.APTIBLE_USERNAME }}" \
            --password "${{ secrets.APTIBLE_PASSWORD }}" \
            --environment illinois-staging

      # 3. Add Aptible remote
      - name: Add Aptible git remote
        run: git remote add aptible git@primetime.aptible.com:illinois-staging/illinois-get-childcare-staging.git

      # 4. Push the selected ref
      - name: Push selected ref to Aptible
        run: |
          REF="${{ github.event.inputs.ref }}"

          # Ensure the ref exists
          if ! git rev-parse "$REF" >/dev/null 2>&1; then
            echo "Ref $REF does not exist!"
            exit 1
          fi

          # Deploy tags as tags, branches to main
          if git show-ref --tags | grep -q "$REF"; then
            echo "Pushing tag $REF to Aptible..."
            git push aptible "refs/tags/$REF:refs/tags/$REF" --force
          else
            echo "Pushing branch $REF to Aptible main..."
            git push aptible "HEAD:refs/heads/main" --force

      # 5. Generate Sentry release name
      - name: Generate Sentry release name from sha
        run: echo "RELEASE=$(git rev-parse HEAD)" >> $GITHUB_ENV

      # 6. Create Sentry release
      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: codeforamerica
          SENTRY_PROJECT: il-gcc
        with:
          environment: staging
          ignore_missing: true
          version: ${{ env.RELEASE }}

      # 7. Announce deployment on Slack
      - name: Announce on Slack
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
