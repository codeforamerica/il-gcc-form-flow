name: Deploy Hotfix to AWS QA

on:
  workflow_dispatch:
    inputs: { }

jobs:
  deploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: illinois-getchildcare-qa-app
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY:${{env.IMAGE_TAG}} --platform linux/amd64 .
          docker push $ECR_REGISTRY:${{env.IMAGE_TAG}}

      - name: Update SSM Version Parameter
        run: |
          aws ssm put-parameter \
            --name /illinois-getchildcare/qa/version \
            --value "${IMAGE_TAG}" \
            --overwrite

      - name: Trigger infrastructure deployment
        run: |
          set -euo pipefail
          repo_owner="codeforamerica" 
          repo_name="il-gcc-infra"  
          event_type="deploy" 
          environment="staging"
          config="qa"
          curl --fail --silent --show-error -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.QA_DEPLOY_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\":\"$event_type\",\"client_payload\":{\"environment\":\"$environment\",\"config\":\"$config\"}}"

      - name: Generate Sentry release name
        id: generate-release
        run: |
          REF_NAME=${GITHUB_REF#refs/*/}
          RELEASE_NAME=${REF_NAME//\//-}
          echo "RELEASE=$RELEASE_NAME" >> $GITHUB_ENV

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: codeforamerica
          SENTRY_PROJECT: il-gcc
        with:
          environment: qa
          release: ${{ env.RELEASE }}
          ignore_missing: true

      - name: Announce on Slack when deployed
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
