form-flow:
  encryption-key: ${ENCRYPTION_KEY}
  lock-after-submitted:
    - flow: gcc
      redirect: after-submit-contact-provider
    - flow: providerresponse
      redirect: submit-confirmation
  design-system:
    name: honeycrisp
  languages: en, es
  flow:
    ubi:
      email:
        confirmation:
          cc:
          bcc:
  session-continuity-interceptor:
    enabled: true
  inputs: 'org.ilgcc.app.inputs.'
  uploads:
    accepted-file-types: '.jpg, .jpeg, .png, .pdf, .bmp, .gif, .doc, .docx, .odt, .ods, .odp'
    thumbnail-width: '64'
    thumbnail-height: '60'
    # 20 files maximum
    max-files: '20'
    # 20 MB file size limit
    # If this is not set then the server values below for servlet max-file-size and tomcat max POST size will not be set
    # which will cause the server to use the default values of 1MB preventing uploads larger than that.
    max-file-size: '10'
    virus-scanning:
      enabled: false
      service-url: ${CLAMAV_URL}
      block-if-unreachable: true
    file-conversion:
      convert-to-pdf: ${CONVERT_UPLOADS_TO_PDF:false}
      prefix: ${CONVERTED_FILE_PREFIX:}
      suffix: ${CONVERTED_FILE_SUFFIX:}
  aws:
    region: ${AWS_REGION}
    s3_bucket_name: ${AWS_BUCKET}
    access_key: ${AWS_ACCESS_KEY}
    secret_key: ${AWS_SECRET_KEY}
  address-validation:
    enabled: ${ADDRESS_VALIDATION_ENABLED:true}
    smarty:
      auth-id: ${SMARTY_AUTH_ID}
      auth-token: ${SMARTY_AUTH_TOKEN}
      license: us-core-cloud
  pdf:
    path: 'src/main/resources/pdfs/'
    map-file: pdf-map.yaml
    generate-flattened: false
    read-only: true
  email-client:
    mailgun:
      key: ${MAILGUN_KEY:'no-key-set'}
      domain: 'mail.forms-starter.cfa-platforms.org'
      sender-email: 'UBI Demo <demo@mail.forms-starter.cfa-platforms.org>'
  error:
    pretty-print-packages: formflow,ilgcc
  short-code:
    short-code-configs:
      gcc:
        creation-point: submission
        length: 6
        type: alphanumeric
        uppercase: true
spring:
  profiles:
    group:
      test:
        - test
        - form-flow-library
      dev:
        - dev
        - form-flow-library
      demo:
        - demo
        - form-flow-library
      staging:
        - staging
        - form-flow-library
      production:
        - production
        - form-flow-library
      qa:
        - qa
        - form-flow-library
  thymeleaf:
    template-resolver-order: 0
    check-template-location: true
  web:
    resources:
      static-locations: file:src/main/resources/static/, file:generated/main/resources/static
  datasource:
    url: jdbc:postgresql://localhost:5432/il-gcc
    username: il-gcc
    hikari:
      max-lifetime: 270000
      idle-timeout: 250000
      keepalive-time: 180000
  servlet:
    multipart:
      max-file-size: ${form-flow.uploads.max-file-size}MB
      max-request-size: ${form-flow.uploads.max-file-size}MB
logging:
  level:
    root: INFO
    org.springframework.web: ERROR
server:
  tomcat:
    max-http-form-post-size: ${form-flow.uploads.max-file-size}MB
  error:
    whitelabel:
      enabled: false
management:
  datadog:
    metrics:
      export:
        api-key: ${DATADOG_API_KEY}
        application-key: ${DATADOG_APPLICATION_KEY}
  endpoints:
    enabled-by-default: false
jobrunr:
  jobs:
    retry-back-off-time-seed: 10
  job-scheduler:
    enabled: true
  background-job-server:
    enabled: ${JOBRUNR_SERVER_ENABLED:true}
  dashboard:
    enabled: ${JOBRUNR_DASHBOARD_ENABLED:false}
il-gcc:
  app-version: ${APTIBLE_GIT_REF:no-version-set}
  caseload_codes:
      active: ${ACTIVE_CASELOAD_CODES:[]}
      pending: ${PENDING_CASELOAD_CODES:[]}
  enable-emails: ${ENABLE_EMAILS_FLAG:true}
  enable-faster-application-expiry: ${ENABLE_FASTER_APPLICATION_EXPIRY:false}
  enable-resource-org-emails: ${ENABLE_RESOURCE_ORG_EMAIL:false}
  resource-org-emails: ${RESOURCE_ORG_EMAILS:null}
  resource-org-emails-delay-seconds: ${RESOURCE_ORG_EMAILS_DELAY:15}
  enable-new-sda-caseload-codes: ${ENABLE_NEW_SDA_CASELOAD_CODES:false}
  enable-multiple-providers: ${ENABLE_MULTIPLE_PROVIDERS:false}
  ccms-integration-enabled: ${ENABLE_CCMS_INTEGRATION:false}
  dts-integration-enabled: ${ENABLE_DTS_INTEGRATION:false}
  dts:
    url: ${DOCUMENT_TRANSFER_SERVICE_URL}
    consumer-id: ${DOCUMENT_TRANSFER_SERVICE_CONSUMER_ID}
    auth-token: ${DOCUMENT_TRANSFER_SERVICE_AUTH_TOKEN}
    presigned-url-Duration: 5 # Minutes
  ccms-api:
    api-subscription-key: ${OCP_APIM_SUBSCRIPTION_KEY}
    base-url: ${CCMS_API_BASE_URL}
    transaction-delay-minutes: ${CCMS_TRANSACTION_DELAY_MINUTES:60}
    offline-time-ranges: '${CCMS_OFFLINE_TIME_RANGES: [{"start": "23:00", "end": "05:00"}]}'
    offline-transaction-delay-offset: ${CCMS_OFFLINE_TRANSACTION_DELAY_OFFSET:15}
sendgrid:
  public-key: ${SENDGRID_PUBLIC_KEY}
  enable-sendgrid-email-validation: ${ENABLE_SENDGRID_EMAIL_VALIDATION:false}
  email-validation-api-key: ${SENDGRID_EMAIL_VALIDATION_API_KEY:no-key}
